#! /bin/sh
### BEGIN INIT INFO
# Provides:          carbon-aggregator
# Required-Start:    $remote_fs $syslog $network
# Required-Stop:     $remote_fs $syslog $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Graphite carbon aggregator daemon
# Description:       aggregator daemon for Graphite
### END INIT INFO

# Author: Jonas Genannt <jonas.genannt@capi2name.de>

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Graphite aggregator daemon"
NAME=carbon-aggregator
DAEMON=/usr/bin/$NAME
DAEMON_ARGS="--config=/etc/carbon/carbon.conf"
SCRIPTNAME=/etc/init.d/$NAME

[ -x "$DAEMON" ] || exit 0

[ -r /etc/default/graphite-aggregator ] && . /etc/default/graphite-aggregator

. /lib/lsb/init-functions

if [ ! -r /etc/carbon/carbon.conf ]; then
	[ "$VERBOSE" != no ] && echo "Missing /etc/carbon/carbon.conf - not starting."
	exit 0
fi

if [ "$CARBON_AGGREGATOR_ENABLED" != "true" ] ; then
	[ "$VERBOSE" != no ] && echo "carbon-aggregator disabled in /etc/default/graphite-aggregator"
	exit 0
fi

do_start()
{
	if [ -n "$INSTANCES" ]; then
		for INSTANCE in $INSTANCES
		do
			INSTANCE_PIDFILE=/var/run/${NAME}-${INSTANCE}.pid
			start-stop-daemon --start --quiet --pidfile $INSTANCE_PIDFILE --exec $DAEMON --test > /dev/null \
				|| return 1
			start-stop-daemon --start --quiet --pidfile $INSTANCE_PIDFILE --exec $DAEMON -- \
				$DAEMON_ARGS --logdir=/var/log/carbon/${NAME}-${INSTANCE} --pidfile=$INSTANCE_PIDFILE --instance $INSTANCE start \
				|| return 2
		done
	else
		PIDFILE=/var/run/$NAME.pid
		start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --test > /dev/null \
			|| return 1
		start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \
			$DAEMON_ARGS --logdir=/var/log/carbon/ --pidfile=$PIDFILE start \
			|| return 2
	fi
}

do_stop()
{
	# Different name for process matching to get rid of:
	# warning: this system is not able to track process names
	# longer than 15 characters, please use --exec instead of --name.
	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --exec /usr/bin/python --name carbon-aggregat
	RETVAL="$?"
	[ "$RETVAL" = 2 ] && return 2

	start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --exec /usr/bin/python --name carbon-aggregat
	[ "$?" = 2 ] && return 2

	rm -f /var/run/${NAME}*
	return "$RETVAL"
}

case "$1" in
	start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
	stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
	status)
	status_of_proc "$DAEMON" "$NAME" && return 0 || return $?
	;;
	restart|force-reload)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;;
			*) log_end_msg 1 ;;
		esac
		;;
		*)
		log_end_msg 1
		;;
	esac
	;;
	*)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac

:
